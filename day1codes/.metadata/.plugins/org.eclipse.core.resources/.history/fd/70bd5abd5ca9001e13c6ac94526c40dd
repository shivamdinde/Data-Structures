package Stack_Data;

public class Two_Stack 
{
    int MaxSize,tos1,tos2,stack[];
   void createStack(int size)
   {
       MaxSize=size;
       tos1=-1;
       tos2=MaxSize;
       stack=new int[MaxSize];
   }
   void push1(int e)
   {
       tos1++;
       stack[tos1]=e;
       System.out.println("Pushed "+e);
   }
   void push2(int e)
   {
       tos2++;
       stack[tos2]=e;
       System.out.println("Pushed "+e);
   }
   boolean isFull()
   {
       if(tos1+1==tos2)
           return true;
       else
           return false;
    }
   int pop1()
   {
       int temp=stack[tos1];
       tos1--;
       return temp;
   }
    int pop2()
   {
       int temp=stack[tos2];
       tos2++;
       return temp;
   }
    boolean isEmpty1()
   {
       if(tos1==-1)
           return true;
       else
           return false;
    }
    boolean isEmpty2()
   {
       if(tos2==MaxSize)
           return true;
       else
           return false;
    }
    int peek1()
   {
       return stack[tos1];
   }
    int peek2()
   {
       return stack[tos2];
   }
    void printStack1()
    {
        System.out.println("stack1 Has:");
        for(int i=tos1;i>=0;i--)
            System.out.println(stack[i]);
    }
     void printStack2()
    {
        System.out.println("stack2 Has:");
        for(int i=tos2;i<MaxSize;i++)
            System.out.println(stack[i]);
    }
    
    public static void main(String[] args) {
    	
    }
}
